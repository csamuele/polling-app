openapi: 3.0.3
info:
  title: Polls API
  version: 0.1.0
  description: An API for creating and voting on polls.
paths:
  /api/choices/:
    get:
      operationId: api_choices_list
      description: API endpoint that allows choices to be viewed or edited.
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Choice'
          description: ''
    post:
      operationId: api_choices_create
      description: API endpoint that allows choices to be viewed or edited.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Choice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Choice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Choice'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'
          description: ''
  /api/choices/{id}/:
    get:
      operationId: api_choices_retrieve
      description: API endpoint that allows choices to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this choice.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'
          description: ''
    put:
      operationId: api_choices_update
      description: API endpoint that allows choices to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this choice.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Choice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Choice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Choice'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'
          description: ''
    patch:
      operationId: api_choices_partial_update
      description: API endpoint that allows choices to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this choice.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChoice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChoice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChoice'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'
          description: ''
    delete:
      operationId: api_choices_destroy
      description: API endpoint that allows choices to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this choice.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/questions/:
    get:
      operationId: api_questions_list
      description: API endpoint that returns the 5 most recent questions.
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
          description: ''
    post:
      operationId: api_questions_create
      description: API endpoint that returns the 5 most recent questions.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /api/questions/{id}/:
    get:
      operationId: api_questions_retrieve
      description: API endpoint that returns the 5 most recent questions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    put:
      operationId: api_questions_update
      description: API endpoint that returns the 5 most recent questions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    patch:
      operationId: api_questions_partial_update
      description: API endpoint that returns the 5 most recent questions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    delete:
      operationId: api_questions_destroy
      description: API endpoint that returns the 5 most recent questions.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/questions/{id}/choices/:
    get:
      operationId: api_questions_choices_list
      description: API endpoint that returns all the choices for a particular question.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Choice'
          description: ''
    post:
      operationId: api_questions_choices_create
      description: API endpoint that returns all the choices for a particular question.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Choice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Choice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Choice'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choice'
          description: ''
  /users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    Choice:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        choice_text:
          type: string
          maxLength: 200
        votes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        question:
          type: string
          format: uri
      required:
      - choice_text
      - question
      - url
    PatchedChoice:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        choice_text:
          type: string
          maxLength: 200
        votes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        question:
          type: string
          format: uri
    PatchedQuestion:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        question_text:
          type: string
          maxLength: 200
        pub_date:
          type: string
          format: date-time
          title: Date published
        choices:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
        choices_url:
          type: string
          format: uri
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
    Question:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        question_text:
          type: string
          maxLength: 200
        pub_date:
          type: string
          format: date-time
          title: Date published
        choices:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
        choices_url:
          type: string
          format: uri
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
      required:
      - choices
      - choices_url
      - pub_date
      - question_text
      - url
      - user
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    oauth2:
      type: oauth2
      flows: {}
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
