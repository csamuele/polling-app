
services:
  db:
    image: postgres:17.1
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    expose:
      - 5432
  kcdb:
    image: postgres:17.1
    volumes:
      - kcdb_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KCDB_NAME}
      POSTGRES_USER: ${KCDB_USER}
      POSTGRES_PASSWORD: ${KCDB_PASSWORD}
    expose:
      - 5432
  keycloak:
    image: ghcr.io/csamuele/polling-app-keycloak:v1
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}  
      KC_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      FRONTEND_URL: http://${HOST}
      BACKEND_URL: http://${HOST}:8000

      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://kcdb:5432/${KCDB_NAME}
      KC_DB_USERNAME: ${KCDB_USER}
      KC_DB_PASSWORD: ${KCDB_PASSWORD}
      KC_HOSTNAME: ${HOST}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: INFO
      KC_METRICS_ENABLED: 'true'
      KC_HEALTH_ENABLED: 'true'
    command: 
      - start-dev
      - --import-realm
      - --verbose
    # volumes:
    #   - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json
    ports:
      - 8080:8080
    depends_on:
      - kcdb


  backend:
    image: ghcr.io/csamuele/polling-app-backend:v1
    command: gunicorn polling_app.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - 8000:8000
    environment:
      DEBUG: 0
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL}
      DATABASE: postgres

    depends_on:
      - db
  frontend:
    image: ghcr.io/csamuele/polling-app-frontend:v1
    ports: 
      - 80:80
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www/:/var/www/certbot:ro
    depends_on:
      - backend
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
volumes:
  postgres_data:
  static_volume:
  kcdb_data: